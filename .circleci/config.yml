version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3
  aws-s3: circleci/aws-s3@3.0.0

executors:
  node:
    docker:
      - image: cimg/python:3.9.6-node
    working_directory: /tmp/workspace

jobs:
  build:
    executor: node
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          command: echo 'GENERATE_SOURCEMAP=false' >> .env
      - run:
          command: yarn build
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - build

  deploy-production:
    executor: node
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - aws-s3/sync:
          from: /tmp/workspace/build/
          to: s3://$BUCKET_NAME
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
      - run: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths /\*

  deploy-staging:
    executor: node
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - add_ssh_keys:
          fingerprints:
            - 'af:60:72:69:24:30:f6:31:96:e7:3e:2a:42:21:84:bd'
      - run:
          name: Deploy Staging over SSH
          command: scp -o "StrictHostKeyChecking no" -r /tmp/workspace/build/* ubuntu@$STAGING_SERVER_IP:~/pastel-explorer-frontend/build

workflows:
  version: 2
  main:
    jobs:
      - build:
          name: build-pr
          context: explorer-frontend-staging
          filters:
            branches:
              only:
                - staging
      - build:
          name: build-production
          context: pastel-frontend-stage
          filters:
            branches:
              only:
                - production
      - deploy-staging:
          name: deploy-staging
          context: explorer-frontend-staging
          requires:
            - build-pr
          filters:
            branches:
              only:
                - staging
      - deploy-production:
          name: deploy-production
          requires:
            - build-production
          context: pastel-frontend-stage
          filters:
            branches:
              only:
                - production
